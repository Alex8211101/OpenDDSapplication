// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.6
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:149

#ifndef _TAO_IDL_S03_TRANSFERFILETYPESUPPORTC_0HU1ZR_H_
#define _TAO_IDL_S03_TRANSFERFILETYPESUPPORTC_0HU1ZR_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "S03_TransferFileC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 6
#error This file should be regenerated with TAO_IDL
#endif

// TAO_IDL - Generated from
// d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:35

namespace S03_TransferFile
{

  // TAO_IDL - Generated from
  // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:99

  typedef ::TAO::DCPS::ZeroCopyDataSeq< S03_TransferFile::FileMessage, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> FileMessageSeq;
  

  // TAO_IDL - Generated from
  // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_S03_TRANSFERFILE_FILEMESSAGETYPESUPPORT__VAR_OUT_CH_)
#define _S03_TRANSFERFILE_FILEMESSAGETYPESUPPORT__VAR_OUT_CH_

  class FileMessageTypeSupport;
  typedef FileMessageTypeSupport *FileMessageTypeSupport_ptr;
  typedef TAO_Objref_Var_T<FileMessageTypeSupport> FileMessageTypeSupport_var;
  typedef TAO_Objref_Out_T<FileMessageTypeSupport> FileMessageTypeSupport_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

  class  FileMessageTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    typedef FileMessageTypeSupport_ptr _ptr_type;
    typedef FileMessageTypeSupport_var _var_type;
    typedef FileMessageTypeSupport_out _out_type;

    // The static operations.
    static FileMessageTypeSupport_ptr _duplicate (FileMessageTypeSupport_ptr obj);

    static void _tao_release (FileMessageTypeSupport_ptr obj);

    static FileMessageTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static FileMessageTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static FileMessageTypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    FileMessageTypeSupport (void);

    

    virtual ~FileMessageTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    FileMessageTypeSupport (const FileMessageTypeSupport &);

    void operator= (const FileMessageTypeSupport &);
  };

  // TAO_IDL - Generated from
  // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_S03_TRANSFERFILE_FILEMESSAGEDATAWRITER__VAR_OUT_CH_)
#define _S03_TRANSFERFILE_FILEMESSAGEDATAWRITER__VAR_OUT_CH_

  class FileMessageDataWriter;
  typedef FileMessageDataWriter *FileMessageDataWriter_ptr;
  typedef TAO_Objref_Var_T<FileMessageDataWriter> FileMessageDataWriter_var;
  typedef TAO_Objref_Out_T<FileMessageDataWriter> FileMessageDataWriter_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

  class  FileMessageDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    typedef FileMessageDataWriter_ptr _ptr_type;
    typedef FileMessageDataWriter_var _var_type;
    typedef FileMessageDataWriter_out _out_type;

    // The static operations.
    static FileMessageDataWriter_ptr _duplicate (FileMessageDataWriter_ptr obj);

    static void _tao_release (FileMessageDataWriter_ptr obj);

    static FileMessageDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static FileMessageDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static FileMessageDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::S03_TransferFile::FileMessage & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::S03_TransferFile::FileMessage & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::S03_TransferFile::FileMessage & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::S03_TransferFile::FileMessage & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::S03_TransferFile::FileMessage & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::S03_TransferFile::FileMessage & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::S03_TransferFile::FileMessage & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::S03_TransferFile::FileMessage & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::S03_TransferFile::FileMessage & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::S03_TransferFile::FileMessage & instance_data) = 0;

    // TAO_IDL - Generated from
    // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    FileMessageDataWriter (void);

    

    virtual ~FileMessageDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    FileMessageDataWriter (const FileMessageDataWriter &);

    void operator= (const FileMessageDataWriter &);
  };

  // TAO_IDL - Generated from
  // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_S03_TRANSFERFILE_FILEMESSAGEDATAREADER__VAR_OUT_CH_)
#define _S03_TRANSFERFILE_FILEMESSAGEDATAREADER__VAR_OUT_CH_

  class FileMessageDataReader;
  typedef FileMessageDataReader *FileMessageDataReader_ptr;
  typedef TAO_Objref_Var_T<FileMessageDataReader> FileMessageDataReader_var;
  typedef TAO_Objref_Out_T<FileMessageDataReader> FileMessageDataReader_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

  class  FileMessageDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    typedef FileMessageDataReader_ptr _ptr_type;
    typedef FileMessageDataReader_var _var_type;
    typedef FileMessageDataReader_out _out_type;

    // The static operations.
    static FileMessageDataReader_ptr _duplicate (FileMessageDataReader_ptr obj);

    static void _tao_release (FileMessageDataReader_ptr obj);

    static FileMessageDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static FileMessageDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static FileMessageDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::S03_TransferFile::FileMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::S03_TransferFile::FileMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::S03_TransferFile::FileMessage & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::S03_TransferFile::FileMessage & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::S03_TransferFile::FileMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::S03_TransferFile::FileMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::S03_TransferFile::FileMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::S03_TransferFile::FileMessage & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::S03_TransferFile::FileMessage & instance_data) = 0;

    // TAO_IDL - Generated from
    // d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    FileMessageDataReader (void);

    

    virtual ~FileMessageDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    FileMessageDataReader (const FileMessageDataReader &);

    void operator= (const FileMessageDataReader &);
  };

// TAO_IDL - Generated from
// d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:64

} // module S03_TransferFile

// TAO_IDL - Generated from
// d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_S03_TRANSFERFILE_FILEMESSAGETYPESUPPORT__TRAITS_)
#define _S03_TRANSFERFILE_FILEMESSAGETYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::S03_TransferFile::FileMessageTypeSupport>
  {
    static ::S03_TransferFile::FileMessageTypeSupport_ptr duplicate (
        ::S03_TransferFile::FileMessageTypeSupport_ptr p);
    static void release (
        ::S03_TransferFile::FileMessageTypeSupport_ptr p);
    static ::S03_TransferFile::FileMessageTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::S03_TransferFile::FileMessageTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_S03_TRANSFERFILE_FILEMESSAGEDATAWRITER__TRAITS_)
#define _S03_TRANSFERFILE_FILEMESSAGEDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::S03_TransferFile::FileMessageDataWriter>
  {
    static ::S03_TransferFile::FileMessageDataWriter_ptr duplicate (
        ::S03_TransferFile::FileMessageDataWriter_ptr p);
    static void release (
        ::S03_TransferFile::FileMessageDataWriter_ptr p);
    static ::S03_TransferFile::FileMessageDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::S03_TransferFile::FileMessageDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_S03_TRANSFERFILE_FILEMESSAGEDATAREADER__TRAITS_)
#define _S03_TRANSFERFILE_FILEMESSAGEDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::S03_TransferFile::FileMessageDataReader>
  {
    static ::S03_TransferFile::FileMessageDataReader_ptr duplicate (
        ::S03_TransferFile::FileMessageDataReader_ptr p);
    static void release (
        ::S03_TransferFile::FileMessageDataReader_ptr p);
    static ::S03_TransferFile::FileMessageDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::S03_TransferFile::FileMessageDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\drama\opendds\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1686
#if defined (__ACE_INLINE__)
#include "S03_TransferFileTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

